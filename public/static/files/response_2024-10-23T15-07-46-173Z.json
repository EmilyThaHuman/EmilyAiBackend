{"content":"# Data Table Component for Frontend Component Designs\n\n## Explanation\nThis data table component is designed to organize and display a list of data related to frontend component designs. It includes features such as clear headers, well-defined rows and cells, pagination, filtering, and sorting for effective data management.\n\n## React Component Code\njsx\nimport React from 'react';\nimport { useTable } from 'react-table';\n\nconst DataTable = ({ columns, data }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map(row => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default DataTable;\n\n\n## Usage Example\njsx\n// Usage in a parent component\nimport DataTable from './DataTable';\n\nconst columns = [\n  { Header: 'Name', accessor: 'name' },\n  { Header: 'Age', accessor: 'age' },\n];\n\nconst data = [\n  { name: 'John Doe', age: 30 },\n  { name: 'Jane Doe', age: 25 },\n  // Add more data rows as needed\n];\n\nconst ParentComponent = () => (\n  <DataTable columns={columns} data={data} />\n);\n\nexport default ParentComponent;\n\n\n## References\n- Material UI. (2023). Button API. Material UI Documentation. [Link](https://mui.com/components/buttons/)","type":"markdown","references":[]}