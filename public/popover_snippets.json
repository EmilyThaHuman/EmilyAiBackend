[
  {
    "component": "Popover",
    "title": "Untitled",
    "code": "Copy(or ⌘C)<Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n  Open Popover\n</Button>\n<Popover\n  id={id}\n  open={open}\n  anchorEl={anchorEl}\n  onClose={handleClose}\n  anchorOrigin={{\n    vertical: 'bottom',\n    horizontal: 'left',\n  }}\n>\n  <Typography sx={{ p: 2 }}>The content of the Popover.</Typography>\n</Popover><Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n  Open Popover\n</Button>\n<Popover\n  id={id}\n  open={open}\n  anchorEl={anchorEl}\n  onClose={handleClose}\n  anchorOrigin={{\n    vertical: 'bottom',\n    horizontal: 'left',\n  }}\n>\n  <Typography sx={{ p: 2 }}>The content of the Popover.</Typography>\n</Popover>\n/**\n * Reset the text fill color so that placeholder is visible\n */\n.npm__react-simple-code-editor__textarea:empty {\n  -webkit-text-fill-color: inherit !important;\n}\n\n/**\n * Hack to apply on some CSS on IE10 and IE11\n */\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  /**\n    * IE doesn't support '-webkit-text-fill-color'\n    * So we use 'color: transparent' to make the text transparent on IE\n    * Unlike other browsers, it doesn't affect caret color in IE\n    */\n  .npm__react-simple-code-editor__textarea {\n    color: transparent !important;\n  }\n\n  .npm__react-simple-code-editor__textarea::selection {\n    background-color: #accef7 !important;\n    color: transparent !important;\n  }\n}\nPress Enter to start editing",
    "language": "jsx",
    "description": ""
  },
  {
    "component": "Popover",
    "title": "Untitled",
    "code": "Copy(or ⌘C)<Popover \n  anchorOrigin={{\n    vertical: 'top',\n    horizontal: 'left',\n  }}\n  transformOrigin={{\n    vertical: 'top',\n    horizontal: 'left',\n  }}\n>\n  The content of the Popover.\n</Popover>",
    "language": "jsx",
    "description": ""
  },
  {
    "component": "Popover",
    "title": "Untitled",
    "code": "interface PopoverVirtualElement {\n  nodeType: 1;\n  getBoundingClientRect: () => DOMRect;\n}\nCopyCopied(or ⌘C)",
    "language": "jsx",
    "description": ""
  }
]